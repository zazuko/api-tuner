PREFIX list: <http://www.w3.org/2000/10/swap/list#>
PREFIX tuner: <https://api-tuner.described.at/>
PREFIX string: <http://www.w3.org/2000/10/swap/string#>
PREFIX log: <http://www.w3.org/2000/10/swap/log#>
prefix file: <http://www.w3.org/2000/10/swap/file#>
prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>
prefix math: <http://www.w3.org/2000/10/swap/math#>

{
  ?body </#body> ( ?curlArgs ?requestBodyFile ) .
} <= {
  ?body log:rawType log:Formula .
  ?body log:n3String ?serialized .
  () file:temp ?requestBodyFile .

  # Save body to file so that it can be used in the curl command reliably
  (
    "echo '" ?serialized "' | "
    # need to replace quotes around string
    ( "lib/replace-quotes.sh"!file:libPath )!string:concatenation
    " > " ?requestBodyFile
  )!string:concatenation!e:exec .

  ( " -H 'Content-Type:text/turtle' --data-binary @" ?requestBodyFile ) string:concatenation ?curlArgs .
} .

{
  ?fileUrl </#body> ( ?curlArgs [] ) .
} <= {
  ( " --data-binary " ?fileUrl!file:curlFileReference ) string:concatenation ?curlArgs .
} .

{
  ?multipartBody </#body> ( ?curlArgs [] ) .
} <= {
  ?multipartBody!tuner:form!list:length math:greaterThan 0 .

  (
    ?formField
    {
      ?multipartBody tuner:form ( ?name ?value ) .

      (
        { ?value log:rawType log:Literal }
        {
          ( " -F " ?name "=" ?value ) string:concatenation ?formField .
        }
        {
          ( " -F " ?name "=" ?value!file:curlFileReference ) string:concatenation ?formField .
        }
      ) log:ifThenElseIn [] .
    }
    ?formFields
  ) log:collectAllIn [] .

  (
    ?formFields!string:concatenation
  ) string:concatenation ?curlArgs .
} .
